FUNCTION(LIST_INTERSECTION INPUT_VAR SUBSET_VAR)
  CMAKE_PARSE_ARGUMENTS(PARSED
    ""
    "OUTPUT"
    ""
    ${ARGN}
  )
  # INPUT_VAR and SUBSET_VAR are variable names
  # hence the double dereference
  SET(INPUT ${${INPUT_VAR}})
  SET(SUBSET ${${SUBSET_VAR}})
  SET(INTERSECTION)
  IF (INPUT STREQUAL "ALL")
    SET(INTERSECTION ${SUBSET})
  ELSEIF (SUBSET STREQUAL "ALL")
    SET(INTERSECTION ${INPUT})
  ELSE()
    FOREACH(ENTRY ${SUBSET})
      IF (ENTRY IN_LIST INPUT)
        LIST(APPEND INTERSECTION ${ENTRY})
      ENDIF()
    ENDFOREACH()
  ENDIF()
  IF (PARSED_OUTPUT)
    SET(${PARSED_OUTPUT} ${INTERSECTION} PARENT_SCOPE)
  ELSE()
    SET(${INPUT_VAR} ${INTERSECTION} PARENT_SCOPE)
  ENDIF()
ENDFUNCTION()

FUNCTION(CHECK_KOKKOS_BACKENDS)
  SET(AVAILABLE_BACKENDS
    CUDA
    OPENMP
    SERIAL
    PTHREAD
    HIP
  )
  CMAKE_PARSE_ARGUMENTS(PARSED
    ""
    "OUTPUT"
    "${AVAILABLE_BACKENDS}"
    ${ARGN}
  )

  FOREACH(BE ${AVAILABLE_BACKENDS})
    IF (Kokkos_ENABLE_${BE})
      SET(KOKKOS_ENABLE_${BE} ON)
    ELSE()
      SET(KOKKOS_ENABLE_${BE} OFF)
    ENDIF()
    SET(KOKKOSKERNELS_INST_EXECSPACE_${BE}_DEFAULT ${KOKKOS_ENABLE_${BE}} PARENT_SCOPE)
    SET(KOKKOS_ENABLE_${BE} ${KOKKOS_ENABLE_${BE}} PARENT_SCOPE)
  ENDFOREACH()

  SET(ENABLED_COMPONENTS "ALL")
  FOREACH(BE ${AVAILABLE_BACKENDS})
    IF (KOKKOS_ENABLE_${BE})
      SET(VALID_COMPONENTS ${PARSED_${BE}})
      LIST_INTERSECTION(ENABLED_COMPONENTS VALID_COMPONENTS)
    ENDIF()
  ENDFOREACH()
  SET(${PARSED_OUTPUT} ${ENABLED_COMPONENTS} PARENT_SCOPE)
ENDFUNCTION(CHECK_KOKKOS_BACKENDS)

CHECK_KOKKOS_BACKENDS(
  CUDA    ALL
  OPENMP  ALL
  SERIAL  ALL
  PTHREAD ALL
  HIP     BLAS
  OUTPUT  VALID_COMPONENTS
)

if (NOT VALID_COMPONENTS)
  MESSAGE(FATAL_ERROR "Enabled backends have not implemented any common components."
                      " There is nothing to enable and build")
ENDIF()

KOKKOSKERNELS_ADD_OPTION(
  ENABLED_COMPONENTS
  ${VALID_COMPONENTS}
  STRING
  "A list of components to enable in testing and building"
  VALID_ENTRIES BATCHED BLAS GRAPH SPARSE ALL
)
LIST_INTERSECTION(KOKKOSKERNELS_ENABLED_COMPONENTS VALID_COMPONENTS
                  OUTPUT VALID_USER_COMPONENTS)
IF (NOT KOKKOSKERNELS_ENABLED_COMPONENTS STREQUAL VALID_USER_COMPONENTS)
  MESSAGE(FATAL_ERROR "User requested components ${KOKKOSKERNELS_ENABLED_COMPONENTS}"
                      ", but only ${VALID_USER_COMPONENTS} is valid")
ENDIF()
